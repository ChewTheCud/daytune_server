name: Deploy to Amazon EC2

on:
  push:
    branches:
      - develop
      - main

env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: daytune-s3
  CODE_DEPLOY_APPLICATION_NAME: daytune-codedeploy
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME_DEV: daytune-codedeploy-dev
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME_PROD: daytune-codedeploy-prod

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    # (1) 기본 체크아웃
    - name: Checkout
      uses: actions/checkout@v3

    # (2) JDK 17 세팅
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'corretto'
        java-version: '17'

    # gradle 권한 부여
    - name: Run chmod to make gradlew executable
      run: chmod +x ./gradlew

    # (3) Gradle build (Test 제외)
    - name: Build with Gradle
      uses: gradle/gradle-build-action@v2
      with:
        arguments: clean build -x test

    # (4) AWS 인증 (IAM 사용자 Access Key, Secret Key 활용)
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    # 환경에 따라 배포 그룹 이름 설정
    - name: Set deployment group name
      id: set_deployment_group
      run: |
        if [ "${{ github.ref }}" == "refs/heads/develop" ]; then
          echo "::set-output name=DEPLOYMENT_GROUP_NAME::${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME_DEV }}"
        elif [ "${{ github.ref }}" == "refs/heads/main" ]; then
          echo "::set-output name=DEPLOYMENT_GROUP_NAME::${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME_PROD }}"
        fi    

    # (5) 빌드 결과물을 S3 버킷에 업로드
    - name: Upload to AWS S3
      run: |
        aws deploy push \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --ignore-hidden-files \
          --s3-location s3://$S3_BUCKET_NAME/${{ github.ref_name }}/$GITHUB_SHA.zip \
          --source .

    # (6) S3 버킷에 있는 파일을 대상으로 CodeDeploy 실행
    - name: Deploy to AWS EC2 from S3
      run: |
        aws deploy create-deployment \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name ${{ steps.set_deployment_group.outputs.DEPLOYMENT_GROUP_NAME }} \
          --s3-location bucket=$S3_BUCKET_NAME,key=${{ github.ref_name }}/$GITHUB_SHA.zip,bundleType=zip
